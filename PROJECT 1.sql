USE PROJECT1;

SELECT STATE, COUNT(STATE) FROM Location GROUP BY State;

SELECT TYPE, COUNT(TYPE) FROM [Product.] GROUP BY Type;

SELECT SUM(MARKETING) AS 'SPENDING ON MARKETING' FROM fact WHERE ProductId=1;

SELECT MIN(SALES) 'MIN SALES' FROM fact;

SELECT MAX(COGS) ' MAX COGS' FROM fact;

SELECT * FROM [Product.] WHERE Product_Type='COFFEE';

SELECT * FROM fact WHERE Total_Expenses > 40;

SELECT AVG(SALES) AS 'AVG SALES' FROM fact WHERE Area_Code = 719;

SELECT SUM(PROFIT) AS' TOTAL PROFIT' FROM Location L, fact F WHERE L.Area_Code =F.Area_Code AND STATE='COLORADO';

SELECT PRODUCTID, AVG(INVENTORY) AS 'AVG INVENTORY' FROM fact GROUP BY ProductId;

SELECT STATE FROM Location ORDER BY State ASC;

SELECT AREA_CODE, AVG(BUDGET_MARGIN)  FROM fact GROUP BY Area_Code HAVING AVG(Budget_Margin) > 100 ;

SELECT SUM(SALES) AS 'TOTAL SALES' FROM fact WHERE Date='01-01-2010';

SELECT DATE, PRODUCTID, AVG(TOTAL_EXPENSES) AS 'AVG TOTAL EXPENSE' FROM fact GROUP BY ProductId, Date ORDER BY ProductId ASC;

SELECT DATE, F.ProductId,P.PRODUCT_TYPE,P.Product, SALES, PROFIT, STATE, L.Area_Code FROM fact F, LOCATION L,[Product.] P;

SELECT *, DENSE_RANK() OVER (ORDER BY SALES ASC) AS 'DENSE_RANK' FROM FACT;

SELECT STATE, SUM(PROFIT) AS' PROFIT', SUM(SALES)AS 'SALES' FROM fact F, LOCATION L WHERE F.Area_Code=L.Area_Code GROUP BY STATE;

SELECT STATE, Product, SUM(PROFIT) AS' PROFIT', SUM(SALES)AS 'SALES' FROM fact F, LOCATION L,[PRODUCT.] P
WHERE F.Area_Code=L.Area_Code AND P.PRODUCTID=F.PRODUCTID GROUP BY STATE, Product ORDER BY State ASC ;

SELECT SALES,(SALES+SALES * 5/100) AS 'SALES INCRESED BY 5%' FROM fact;

SELECT F.ProductId,PRODUCT_TYPE, Profit FROM fact F, [Product.] P WHERE F.ProductId=P.ProductId AND 
Profit =(SELECT MAX(PROFIT) FROM fact);

CREATE PROCEDURE PRODUCT_TYPE @TYPE VARCHAR(20)
AS
SELECT * FROM [Product.] WHERE Type=@TYPE
GO

EXEC PRODUCT_TYPE @TYPE ='REGULAR'

SELECT PRODUCTID, PROFIT, SALES,TOTAL_EXPENSES,
CASE
	WHEN TOTAL_EXPENSES < 60 THEN 'PROFIT'
ELSE 'LOSS'

SELECT COALESCE(DATEPART(WW,DATE),PRODUCTID), SUM(SALES) FROM fact GROUP BY ROLLUP(Date, ProductId);

SELECT Area_Code FROM fact UNION SELECT Area_Code FROM Location;

SELECT Area_Code FROM fact INTERSECT SELECT Area_Code FROM Location;

CREATE FUNCTION SELECT_PRODUCT (@PRODUCTTYPE AS VARCHAR(20))
RETURNS TABLE
AS
RETURN
(SELECT * FROM [Product.] WHERE Type=@PRODUCTTYPE)

SELECT * FROM dbo.SELECT_PRODUCT ('REGULAR')

SELECT DATE, PRODUCTID, SALES FROM fact WHERE Total_Expenses BETWEEN 100 AND 200;

DELETE FROM [PRODUCT.] WHERE TYPE='REGULAR';

SELECT ASCII(PRODUCT) FROM [PRODUCT.]









END AS PROFITLOSS
FROM FACT












































