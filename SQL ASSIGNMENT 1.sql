create database Stu_Soft_Pro;

use Stu_Soft_Pro;

create table STUDIES(
P_NAME varchar(20),
INTITUTE VARCHAR(20),
COURSE VARCHAR(20),
COURSE_FEE INT
);

INSERT INTO STUDIES VALUES('ANAND', 'SABHARI', 'PGDCA',4500);
INSERT INTO STUDIES VALUES('ALTAF', 'COIT', 'DCA',7200);
INSERT INTO STUDIES VALUES('JULIANA', 'BDPS','MCA',22000);
INSERT INTO STUDIES VALUES('KAMALA', 'PRAGATHI','DCA',5000);
INSERT INTO STUDIES VALUES('MARY', 'SABHARI', 'PGDCA',4500);
INSERT INTO STUDIES VALUES('NELSON', 'PRAGATHI','DAP',6200);
INSERT INTO STUDIES VALUES('PATRICK','PRAGATHI','DCAP',5200);
INSERT INTO STUDIES VALUES('QADIR','APPLE','HDCA',14000);
INSERT INTO STUDIES VALUES('RAMESH','SABHARI','PGDCA',4500);
INSERT INTO STUDIES VALUES('REBECCA','BRILLIANT','DCAP',11000);
INSERT INTO STUDIES VALUES('REMITHA','BDPS','DCS',6000);
INSERT INTO STUDIES VALUES('REVATHI','SABHARI','DAP',5000);
INSERT INTO STUDIES VALUES('VIJAYA','BDPS','DCA',48000);

SELECT * FROM STUDIES;

USE Stu_Soft_Pro;

CREATE TABLE SOFTWARE(
P_NAME VARCHAR(20),
TITLE VARCHAR(20),
DEVELOPIN VARCHAR(20),
S_COST FLOAT,
D_COST INT,
SOLD INT
);

INSERT INTO SOFTWARE VALUES ('MARY','README','CPP',300,1200,84);
INSERT INTO SOFTWARE VALUES ('ANAND','PARACHUTES','BASIC',399.95,6000,43);
INSERT INTO SOFTWARE VALUES ('ANAND','VIDEO TITLING','PASCAL',7500,16000,9);
INSERT INTO SOFTWARE VALUES ('JULIANA','INVENTORY','COBOL',3000,3500,0);
INSERT INTO SOFTWARE VALUES ('KAMALA','PAYROLL PKG','DBASE',9000,20000,7);
INSERT INTO SOFTWARE VALUES ('MARY','FINANCIAL ACCT','ORACLE',18000,85000,4);
INSERT INTO SOFTWARE VALUES ('MARY','CODE GENERATOR','C',4500,20000,23);
INSERT INTO SOFTWARE VALUES ('PATTRICK','README','CPP',300,1200,84);
INSERT INTO SOFTWARE VALUES ('QADIR','BOMBS AWAY','ASSEMBLY',750,3000,11);
INSERT INTO SOFTWARE VALUES ('QADIR','VACCINES','C',1900,3100,21);
INSERT INTO SOFTWARE VALUES ('RAMESH','HOTEL MGMT','DBASE',13000,35000,4);
INSERT INTO SOFTWARE VALUES ('RAMESH','DEAD LEE','PASCAL',599.95,4500,73);
INSERT INTO SOFTWARE VALUES ('REMITHA','PC UTILITIES','C',725,5000,51);
INSERT INTO SOFTWARE VALUES ('REMITHA','TSR HELP PKG','ASSEMBLY',2500,6000,7);
INSERT INTO SOFTWARE VALUES ('REVATHI','HOSPITAL MGMT','PASCAL',1100,75000,2);
INSERT INTO SOFTWARE VALUES ('VIJAYA','TSR EDITOR','C',900,700,6);

SELECT * FROM SOFTWARE;

CREATE TABLE PROGRAMMER(
P_NAME VARCHAR(20),
DOB DATE,
DOJ DATE,
GENDER VARCHAR(20),
PROF1 VARCHAR(20),
PROF2 VARCHAR(20),
SALARY INT
);

INSERT INTO PROGRAMMER VALUES ('ANAND','1966-APR-12','1992-APR-21','MALE','PASCAL','BASIC',3200);
INSERT INTO PROGRAMMER VALUES ('ALTAF','1964-JUL-02','1990-NOV-13','MALE','CLIPPER','COBOL',2800);
INSERT INTO PROGRAMMER VALUES ('JULIANA','1960-JAN-31','1990-APR-21','FEMALE','COBOL','DBASE',3000);
INSERT INTO PROGRAMMER VALUES ('KAMALA','1968-OCT-30','1992-JAN-02','FEMALE','C','DBASE',2900);
INSERT INTO PROGRAMMER VALUES ('MARY','1970-JUN-24','1991-FEB-01','FEMALE','CPP','ORACLE',4500);
INSERT INTO PROGRAMMER VALUES ('NELSON','1985-SEP-11','1989-OCT-11','MALE','COBOL','DBASE',2500);
INSERT INTO PROGRAMMER VALUES ('PATTRICK','1965-NOV-10','1990-APR-21','MALE','PASCAL','CLIPPER',2800);
INSERT INTO PROGRAMMER VALUES ('QADIR','1965-AUG-31','1991-APR-21','MALE','ASSEMBLY','C',3000);
INSERT INTO PROGRAMMER VALUES ('RAMESH','1967-MAY-03','1991-FEB-28','MALE','PASCAL','DBASE',3200);
INSERT INTO PROGRAMMER VALUES ('REBECCA','1967-JAN-01','1990-DEC-01','FEMALE','BASIC','COBOL',2500);
INSERT INTO PROGRAMMER VALUES ('REMITHA','1970-APR-19','1993-APR-20','FEMALE','C','ASSEMBLY',3600);
INSERT INTO PROGRAMMER VALUES ('REVATHI','1969-DEC-02','1992-JAN-02','FEMALE','PASCAL','BASIC',3700);
INSERT INTO PROGRAMMER VALUES ('VIJAYA','1965-DEC-14','1992-MAY-02','FEMALE','FOXPRO','C',3500);


SELECT * FROM PROGRAMMER;


USE STU_SOFT_PRO;

SELECT AVG(S_COST) AS 'AVG' FROM SOFTWARE WHERE DEVELOPIN='PASCAL';

SELECT P_NAME, DATEDIFF(YY,DOB,GETDATE()) AS AGE FROM PROGRAMMER;

SELECT P_NAME,COURSE FROM STUDIES WHERE COURSE='DAP';

SELECT P_NAME, DATEPART(DD,DOB) AS 'DATE' FROM PROGRAMMER WHERE DATEPART(MM,DOB)=01;

SELECT MAX(SOLD) FROM SOFTWARE ;

SELECT  MIN(COURSE_FEE) FROM STUDIES;

SELECT COURSE, COUNT(*) AS CNT FROM STUDIES WHERE COURSE='PGDCA' GROUP BY COURSE;

SELECT SUM(SOLD*S_COST) AS TOTAL_REVENUE FROM SOFTWARE WHERE DEVELOPIN='C';

SELECT * FROM SOFTWARE WHERE P_NAME='RAMESH';

SELECT COUNT(*) AS 'COUNT' FROM STUDIES WHERE INSTITUTE='SABHARI';

SELECT * FROM SOFTWARE WHERE (S_COST) >2000;

SELECT * FROM SOFTWARE WHERE D_COST >= (SOLD*S_COST);

SELECT S_COST FROM SOFTWARE WHERE S_COST = (SELECT MAX(S_COST) FROM SOFTWARE WHERE DEVELOPIN='BASIC');

SELECT COUNT(*) AS 'COUNT' FROM SOFTWARE WHERE DEVELOPIN='DBASE';

SELECT COUNT(*) FROM STUDIES WHERE INSTITUTE ='PRAGATHI';

SELECT COUNT(*) FROM STUDIES WHERE COURSE_FEE BETWEEN 5000 AND 10000;

SELECT AVG(COURSE_FEE) AS 'AVG FEE' FROM STUDIES;

SELECT * FROM PROGRAMMER WHERE PROF1='C' OR PROF2='C';

SELECT COUNT(*) FROM PROGRAMMER WHERE PROF1='COBOL' OR  PROF1='PASCAL' OR PROF2='COBOL' OR PROF2='PASCAL';

SELECT COUNT(*) FROM PROGRAMMER WHERE PROF1!='PASCAL' AND PROF2!='PASCAL' AND PROF1!='C' AND PROF2!='C';

SELECT P_NAME, DATEDIFF(YY,DOJ,GETDATE()) AS AGE FROM PROGRAMMER WHERE DOB = 
(SELECT MAX(DOB) FROM PROGRAMMER) AND GENDER='MALE';

SELECT AVG(DATEDIFF(YY,DOB,GETDATE())) AS 'AVG AGE' FROM PROGRAMMER WHERE GENDER ='FEMALE';

SELECT *, DATEDIFF(YY,DOJ,GETDATE()) AS AGE FROM PROGRAMMER ORDER BY P_NAME DESC;

SELECT * FROM PROGRAMMER WHERE DATEPART(MM,DOB)=DATEPART(MM,GETDATE());

SELECT COUNT(GENDER) AS'FEMALE COUNT' FROM PROGRAMMER WHERE GENDER='FEMALE'; 

SELECT P.P_NAME, ST.COURSE FROM STUDIES ST, PROGRAMMER P WHERE ST.P_NAME = P.P_NAME AND P.GENDER='MALE';

SELECT AVG(SALARY) AS 'AVG SALARY' FROM PROGRAMMER;

SELECT COUNT(*) FROM PROGRAMMER WHERE SALARY BETWEEN 2000 AND 4000;

SELECT * FROM PROGRAMMER WHERE PROF1!='CLIPPER' AND PROF1!='COBOL' AND PROF1!='PASCAL' AND 
PROF2!='CLIPPER' AND PROF2!='COBOL' AND PROF2!='PASCAL';

SELECT P_NAME, SUM(S_COST) AS 'S COST', SUM(D_COST) AS 'D COST' FROM SOFTWARE GROUP BY P_NAME;

SELECT P_NAME, SUM(S_COST*SOLD) AS 'SALES VALUE' FROM SOFTWARE GROUP BY P_NAME;

SELECT P_NAME, SUM(SOLD) AS 'SOLD VALUE' FROM SOFTWARE GROUP BY P_NAME;

SELECT P_NAME, DEVELOPIN,S_COST FROM SOFTWARE GROUP BY P_NAME, DEVELOPIN, S_COST;


SELECT DEVELOPIN, AVG(D_COST) AS 'AVG D COST', AVG(S_COST) AS 'AVG S COST', 
AVG(S_COST*SOLD) AS 'AVG PRICE' FROM SOFTWARE GROUP BY DEVELOPIN;

SELECT P_NAME, MAX(D_COST) AS 'COSTLIES', MIN(D_COST) AS 'CHEAPEST' FROM SOFTWARE GROUP BY P_NAME; 

SELECT INSTITUTE, COUNT(COURSE) AS 'NO OF COURSES', AVG(COURSE_FEE) AS'AVG COURSE FEE' FROM STUDIES GROUP BY INSTITUTE;

SELECT INSTITUTE, COUNT(P_NAME) AS'NO OF STUDENTS' FROM STUDIES GROUP BY INSTITUTE;

SELECT P_NAME, GENDER FROM PROGRAMMER;

SELECT P.P_NAME, S.TITLE FROM PROGRAMMER P, SOFTWARE S WHERE P.P_NAME=S.P_NAME;

SELECT DEVELOPIN, COUNT(TITLE) FROM SOFTWARE  WHERE DEVELOPIN!='C' AND DEVELOPIN!='C++' GROUP BY DEVELOPIN;

SELECT DEVELOPIN, COUNT(TITLE) FROM SOFTWARE  WHERE D_COST<1000 GROUP BY DEVELOPIN;

SELECT TITLE, AVG(D_COST-S_COST) AS 'AVG' FROM SOFTWARE GROUP BY TITLE;

SELECT P_NAME, SUM(D_COST) AS 'D COST',SUM(S_COST*SOLD) AS 'S COST',SUM(D_COST-(S_COST*SOLD)) 
AS 'AMOUNT TO BE RECOVERED' FROM SOFTWARE GROUP BY P_NAME HAVING SUM(D_COST-(S_COST*SOLD))>0;

SELECT MAX(SALARY) AS 'MAX SLRY', MIN(SALARY) AS'MIN SARY', AVG(SALARY) AS 'AVG SLRY' FROM PROGRAMMER WHERE SALARY>2000;

SELECT P_NAME, SALARY FROM PROGRAMMER WHERE SALARY IN 
(SELECT MAX(SALARY) FROM PROGRAMMER WHERE PROF1='C' OR PROF2='C')

SELECT P_NAME, GENDER, SALARY FROM PROGRAMMER WHERE GENDER='FEMALE' AND SALARY IN 
(SELECT MAX(SALARY) FROM PROGRAMMER WHERE PROF1='COBOL' OR PROF2='COBOL');

SELECT P_NAME, SALARY,PROF1 FROM PROGRAMMER WHERE SALARY IN (SELECT MAX(SALARY) 
FROM PROGRAMMER GROUP BY PROF1)

(SELECT PROF1 FROM PROGRAMMER) INTERSECT (SELECT PROF2 FROM PROGRAMMER);

SELECT TOP 1 P_NAME,DOJ, DATEDIFF(YY,DOJ,GETDATE()) FROM PROGRAMMER ORDER BY DOJ DESC;

SELECT TOP 1 P_NAME,DOJ,PROF1,DATEDIFF(YY,DOJ,GETDATE())FROM PROGRAMMER WHERE PROF1='PASCAL'AND
GENDER='MALE' ORDER BY DOJ ASC;

SELECT PROF1 FROM PROGRAMMER GROUP BY PROF1 HAVING PROF1 
NOT IN (SELECT PROF2 FROM PROGRAMMER) AND COUNT(PROF1)=1
UNION SELECT PROF2 FROM PROGRAMMER GROUP BY PROF2 HAVING PROF2 
NOT IN (SELECT PROF1 FROM PROGRAMMER) AND COUNT(PROF2)=1;

SELECT TOP 1 P_NAME,DOJ, DATEDIFF(YY,DOJ,GETDATE()) FROM PROGRAMMER WHERE PROF1='DBASE' OR PROF2='DBASE' ORDER BY DOJ DESC

SELECT P_NAME, PROF1,PROF2 FROM PROGRAMMER WHERE P_NAME NOT IN (SELECT P_NAME FROM PROGRAMMER WHERE 
PROF1='C' OR PROF1='C++' OR PROF1='ORACLE' OR PROF1='DBASE' 
OR PROF2='C' OR PROF2='C++' OR PROF2='ORACLE' OR PROF2='DBASE')

SELECT TOP 1 INSTITUTE,COUNT(P_NAME) AS CNT FROM STUDIES GROUP BY INSTITUTE ORDER BY INSTITUTE DESC;

SELECT TOP 1 COURSE, COURSE_FEE FROM STUDIES ORDER BY COURSE_FEE DESC;

SELECT TOP 1 COURSE,COUNT(COURSE) FROM STUDIES GROUP BY COURSE ORDER BY COURSE DESC;

SELECT TOP 1 INSTITUTE, COURSE_FEE FROM STUDIES ORDER BY COURSE_FEE DESC;

SELECT INSTITUTE, COURSE, COURSE_FEE FROM STUDIES WHERE COURSE_FEE < (SELECT AVG(COURSE_FEE) FROM STUDIES);

SELECT INSTITUTE, COURSE, COURSE_FEE FROM STUDIES WHERE COURSE_FEE < (SELECT AVG(COURSE_FEE)-1000 FROM STUDIES);

SELECT TITLE, D_COST FROM SOFTWARE WHERE D_COST=(SELECT MAX(D_COST) FROM SOFTWARE);

SELECT TITLE FROM SOFTWARE WHERE S_COST = (SELECT MIN(S_COST) FROM SOFTWARE);

SELECT P_NAME, TITLE, SOLD FROM SOFTWARE WHERE SOLD = (SELECT MIN(SOLD) FROM SOFTWARE);

SELECT DEVELOPIN,TITLE FROM SOFTWARE WHERE (S_COST*SOLD) =(SELECT MAX(S_COST*SOLD) FROM SOFTWARE);

SELECT SUM(SOLD) FROM SOFTWARE WHERE (D_COST-S_COST) = (SELECT MIN(D_COST-S_COST) FROM SOFTWARE);

SELECT TITLE FROM SOFTWARE WHERE  S_COST=(SELECT MAX(S_COST) FROM SOFTWARE WHERE DEVELOPIN='PASCAL');

SELECT TOP 1 DEVELOPIN, COUNT(DEVELOPIN) FROM SOFTWARE GROUP BY DEVELOPIN ORDER BY DEVELOPIN DESC;

SELECT TOP 1 P_NAME, COUNT(P_NAME) FROM SOFTWARE GROUP BY P_NAME ORDER BY COUNT(P_NAME) DESC;

SELECT P_NAME, D_COST FROM SOFTWARE WHERE D_COST= (SELECT MAX(D_COST) FROM SOFTWARE)

SELECT TITLE, SOLD FROM SOFTWARE WHERE SOLD < (SELECT AVG(SOLD) FROM SOFTWARE);

SELECT P_NAME, (S_COST*SOLD) FROM SOFTWARE WHERE (S_COST*SOLD) > (2*D_COST);

SELECT P_NAME, TITLE, D_COST FROM SOFTWARE WHERE D_COST IN (SELECT MIN(D_COST) FROM SOFTWARE GROUP BY P_NAME);

SELECT P_NAME, DEVELOPIN, SOLD FROM SOFTWARE WHERE EXISTS (SELECT MAX(SOLD), MIN(SOLD) FROM SOFTWARE GROUP BY P_NAME);

SELECT P_NAME, DEVELOPIN,SOLD FROM SOFTWARE WHERE SOLD IN (SELECT MAX(SOLD) FROM SOFTWARE GROUP BY P_NAME) UNION 
SELECT P_NAME, DEVELOPIN,SOLD FROM SOFTWARE WHERE SOLD IN (SELECT MIN(SOLD) FROM SOFTWARE GROUP BY P_NAME); 

SELECT TOP 1 *, DATEDIFF(YY,DOB,GETDATE()) FROM PROGRAMMER WHERE DATEPART(YY,DOB)='1965' 
AND GENDER='MALE'ORDER BY DOB DESC;

SELECT TOP 1 *, DATEDIFF(YY,DOJ,GETDATE()) FROM PROGRAMMER WHERE DATEPART(YY,DOJ)='1992' 
AND GENDER='FEMALE' ORDER BY DOB ASC;

SELECT TOP 1 DATEPART(YY,DOB), COUNT(DOB) FROM PROGRAMMER GROUP BY DATEPART(YY,DOB) ORDER BY COUNT(DOB) DESC;

SELECT TOP 1 DATEPART(MM,DOJ), COUNT(DOJ) FROM PROGRAMMER GROUP BY DATEPART(MM,DOJ) ORDER BY COUNT(DOJ) DESC;

SELECT P.PROF1 FROM PROGRAMMER P UNION SELECT R.PROF2 FROM PROGRAMMER R;

SELECT P_NAME,SALARY FROM PROGRAMMER WHERE GENDER='MALE' AND SALARY < 
(SELECT AVG(SALARY) FROM PROGRAMMER WHERE GENDER='FEMALE');

SELECT * FROM PROGRAMMER P, PROGRAMMER R WHERE P.SALARY=R.SALARY;

SELECT TITLE, SALARY FROM SOFTWARE S,PROGRAMMER P WHERE S.P_NAME=P.P_NAME AND GENDER='MALE' AND SALARY >3000;

SELECT TITLE FROM SOFTWARE S, PROGRAMMER P WHERE S.P_NAME=P.P_NAME AND GENDER='FEMALE' AND DEVELOPIN='PASCAL';

SELECT * FROM PROGRAMMER WHERE DATEPART(YY,DOJ) < '1990';

SELECT TITLE FROM STUDIES ST, SOFTWARE S, PROGRAMMER P WHERE ST.P_NAME=S.P_NAME AND S.P_NAME=P.P_NAME AND
P.P_NAME=ST.P_NAME AND DEVELOPIN='C' AND GENDER='PRAGATHI';

SELECT INSTITUTE, COUNT(TITLE) AS 'NO OF PACKAGES', COUNT(SOLD) AS 'TOTAL SOLD', 
SUM(S_COST*SOLD) AS 'SALES VALUE' FROM SOFTWARE S, STUDIES ST WHERE S.P_NAME=ST.P_NAME GROUP BY INSTITUTE;

SELECT * FROM SOFTWARE S, PROGRAMMER P WHERE S.P_NAME=P.P_NAME AND DEVELOPIN='DBASE' AND GENDER='MALE' AND EXISTS
(SELECT TOP 1 INSTITUTE, COUNT(ST.P_NAME) FROM STUDIES ST GROUP BY INSTITUTE ORDER BY COUNT(ST.P_NAME) DESC);

SELECT * FROM SOFTWARE S, PROGRAMMER P WHERE S.P_NAME=P.P_NAME AND P.P_NAME =(SELECT P_NAME FROM PROGRAMMER P 
WHERE DATEPART(YY,DOB)<'1965' AND GENDER='MALE' AND DATEPART(YY,DOB)>1975 AND GENDER='FEMALE');

SELECT * FROM SOFTWARE S, PROGRAMMER P WHERE S.P_NAME=P.P_NAME AND DEVELOPIN!=PROF1 AND DEVELOPIN!=PROF2;

SELECT S.P_NAME,TITLE,DEVELOPIN FROM STUDIES ST, SOFTWARE S, PROGRAMMER P WHERE ST.P_NAME=S.P_NAME AND S.P_NAME=P.P_NAME AND
P.P_NAME=ST.P_NAME AND GENDER='MALE' AND INSTITUTE='SABHARI';

SELECT * FROM PROGRAMMER WHERE P_NAME NOT IN (SELECT P_NAME FROM SOFTWARE);

SELECT SUM(D_COST) FROM SOFTWARE S, STUDIES ST WHERE INSTITUTE='APPLE';

SELECT * FROM PROGRAMMER P WHERE DATEPART(DD,DOJ) IN (SELECT DATEPART(DD,DOJ) FROM PROGRAMMER WHERE P.P_NAME<>P_NAME);

SELECT * FROM PROGRAMMER P, PROGRAMMER R WHERE P.P_NAME=R.P_NAME AND P.PROF2 IN (SELECT PROF2 FROM PROGRAMMER)

SELECT * FROM PROGRAMMER WHERE PROF2 = ANY (SELECT PROF2 FROM PROGRAMMER GROUP BY PROF2 HAVING COUNT(*)>1);

SELECT INSTITUTE FROM STUDIES ST,SOFTWARE S WHERE ST.P_NAME=S.P_NAME GROUP BY INSTITUTE, D_COST 
HAVING MAX(D_COST)=(SELECT MAX(D_COST) FROM SOFTWARE S) ;

SELECT * FROM SOFTWARE S, PROGRAMMER P WHERE S.P_NAME=P.P_NAME AND DEVELOPIN!=PROF1 AND DEVELOPIN!=PROF2;

SELECT SALARY, COURSE FROM PROGRAMMER P,SOFTWARE S, STUDIES ST WHERE P.P_NAME=S.P_NAME AND S.P_NAME=ST.P_NAME 
AND ST.P_NAME=P.P_NAME AND D_COST=(SELECT MAX(D_COST) FROM SOFTWARE S);

SELECT AVG(SALARY) FROM PROGRAMMER P, SOFTWARE S WHERE P.P_NAME=S.P_NAME AND (S_COST*SOLD)>50000;

SELECT INSTITUTE, COUNT(TITLE) FROM SOFTWARE S, STUDIES ST WHERE S.P_NAME=ST.P_NAME  AND COURSE_FEE =
(SELECT MIN(COURSE_FEE) FROM STUDIES ) GROUP BY INSTITUTE;

SELECT INSTITUTE, COUNT(TITLE) FROM SOFTWARE S, STUDIES ST WHERE S.P_NAME=ST.P_NAME 
AND D_COST=(SELECT MIN(D_COST) FROM SOFTWARE S) GROUP BY INSTITUTE;

SELECT COUNT(TITLE) FROM SOFTWARE S, PROGRAMMER P WHERE S.P_NAME=P.P_NAME AND GENDER='FEMALE' AND SALARY > 
(SELECT MAX(SALARY) FROM PROGRAMMER WHERE GENDER='MALE');

SELECT COUNT(TITLE) FROM SOFTWARE S,PROGRAMMER P WHERE S.P_NAME=P.P_NAME AND P.DOJ IN (SELECT TOP 1 DATEDIFF(YY,DOJ,GETDATE()) 
FROM PROGRAMMER P, STUDIES ST WHERE P.P_NAME=ST.P_NAME AND INSTITUTE='BDPS' ORDER BY DOJ ASC);

SELECT COUNT(TITLE) FROM SOFTWARE S,PROGRAMMER P WHERE S.P_NAME=P.P_NAME AND P.DOJ = (SELECT TOP 1 DOJ
FROM PROGRAMMER P, STUDIES ST WHERE P.P_NAME=ST.P_NAME AND INSTITUTE='BDPS' ORDER BY DOJ ASC);

SELECT S.P_NAME, INSTITUTE FROM SOFTWARE S, STUDIES ST WHERE S.P_NAME=ST.P_NAME;

SELECT DEVELOPIN,COUNT(TITLE) FROM SOFTWARE WHERE EXISTS
(SELECT PROF1,COUNT(P_NAME) FROM PROGRAMMER GROUP BY PROF1) GROUP BY DEVELOPIN;

SELECT P.P_NAME, COUNT(TITLE) FROM SOFTWARE S,PROGRAMMER P WHERE S.P_NAME=P.P_NAME GROUP BY P.P_NAME;
























































































































